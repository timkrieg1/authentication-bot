# This workflow manually triggers the prepare_release workflow from the shared pipeline repo
# and uploads bot_mapping.json as an artifact named 'bot_mapping_file'.

name: Prepare Release (Reusable)

on:
  workflow_dispatch:
    inputs:
        releaseDescription:
            description: 'Release description'
            required: true
            type: string
        runAutomatedTest:
            description: 'Run automated tests'
            required: true
            type: boolean
            default: true
        createPullRequest:
            description: 'Create pull request automatically'
            required: true
            type: boolean
            default: true

permissions:
  contents: write
  pull-requests: write

jobs:
  upload-bot-mapping:
    name: Upload bot_mapping.json as artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Upload bot_mapping.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: bot_mapping_file
          path: bot_mapping.json

  call-prepare-release:
    name: Prepare release using checked out pipeline repo
    needs: upload-bot-mapping
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Checkout pipeline repository
        uses: actions/checkout@v4
        with:
          repository: timkrieg1/cognigy-ci-cd-pipeline
          ref: main
          path: pipeline-repo

      # Example: Run a script from the checked out repo
      - name: Run prepare_release script
        run: |
          # Example: call a script from the pipeline repo
          bash pipeline-repo/scripts/prepare_release.sh \
            --bot-mapping bot_mapping.json \
            --release-description "${{ github.event.inputs.releaseDescription }}" \
            --run-automated-test "${{ github.event.inputs.runAutomatedTest }}" \
            --create-pull-request "${{ github.event.inputs.createPullRequest }}" \
            --bot-name "${{ vars.BOT_NAME }}"
        env:
          # Pass secrets or environment variables as needed
          # EXAMPLE_SECRET: ${{ secrets.EXAMPLE_SECRET }}
