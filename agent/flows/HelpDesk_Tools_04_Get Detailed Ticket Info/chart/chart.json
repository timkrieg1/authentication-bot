[
    {
        "node": "69061f6345fdac4d5c818484",
        "children": [],
        "next": "69061f6345fdac4d5c818485",
        "_id": "69061f6345fdac4d5c818486",
        "_data": {
            "_id": "69061f6345fdac4d5c818484",
            "referenceId": "15eec2df-edad-447d-9825-a63a4804210d",
            "type": "start",
            "extension": "@cognigy/basic-nodes",
            "label": "Start",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": true,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c818487",
        "children": [],
        "next": null,
        "_id": "69061f6345fdac4d5c818488",
        "_data": {
            "_id": "69061f6345fdac4d5c818487",
            "referenceId": "181f7e92-3ce2-4bac-8941-2ce4180725fc",
            "type": "end",
            "extension": "@cognigy/basic-nodes",
            "label": "End",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c818489",
        "children": [],
        "next": "69061f6345fdac4d5c81848a",
        "_id": "69061f6345fdac4d5c81848b",
        "_data": {
            "_id": "69061f6345fdac4d5c818489",
            "referenceId": "1820b9a6-6af9-42c3-a929-c2c01f7dae00",
            "type": "httpRequest",
            "extension": "@cognigy/basic-nodes",
            "label": "HTTP: Post Ticket",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {
                "type": "GET",
                "url": "{{cc.constants.serviceNowApi.baseUrls.incidents}}?sysparm_query=number={{cc.sessionInfo.detailedTicketInfo.number}}",
                "headers": "{\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n}",
                "payloadType": "json",
                "payloadText": "",
                "payloadJSON": "\"{{cc.sessionInfo.createTicket}}\"",
                "payloadFormData": "{}",
                "storeLocation": "input",
                "inputKey": "httprequest",
                "contextKey": "httprequest",
                "authType": "basic",
                "basicConnection": "b2582db9-2bd7-4a35-94a3-fbbade0a581d",
                "apiKeyAuthKeyConnection": "",
                "apiKeyXKeyConnection": "",
                "oAuth2Connection": "",
                "async": false,
                "cache": false,
                "cacheExpiry": 0,
                "timeout": 8000,
                "retryAttempts": 0,
                "storeResponseHeaders": false,
                "allowSelfSigned": false,
                "errorLogging": "none",
                "debugLogging": "none",
                "abortOnError": false,
                "logWarning": ""
            },
            "preview": "{{cc.constants.serviceNowApi.baseUrls.incidents}}?sysparm_query=number={{cc.sessionInfo.detailedTicketInfo.number}}",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c81848a",
        "children": [],
        "next": "69061f6345fdac4d5c818487",
        "_id": "69061f6345fdac4d5c81848c",
        "_data": {
            "_id": "69061f6345fdac4d5c81848a",
            "referenceId": "751e98bd-ddbc-4978-adc1-09cd24dbb0ee",
            "type": "code",
            "extension": "@cognigy/basic-nodes",
            "label": "C: Process response",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {
                "code": "try {\r\n\r\n    function getDetailedInfo(response) {\r\n        if (response.statusCode != 200) {\r\n            cc.sessionInfo.detailedTicketInfo.resolvePrompt = \"Getting detailed information of the ticket failed.\";\r\n            return\r\n        }\r\n\r\n        let content = response.result.result;\r\n        cc.sessionInfo.aiAgent.shortTermMemory.detailedTicketInfo = content;\r\n        cc.sessionInfo.detailedTicketInfo.resolvePrompt = \"You have successfully retrieved the ticket from the ticketing system. Answer the users question about the ticket with the new information.\"\r\n    }\r\n\r\n    getDetailedInfo(ci.httprequest);\r\n\r\n} catch(err) {\r\n    cc.sessionInfo.detailedTicketInfo.resolvePrompt = \"Getting detailed information of the ticket failed.\";\r\n    api.log(\"error\", `Error in processing post call to ticket route. Error was: ${err.toString()}`)\r\n}",
                "hasError": false,
                "transpiled": "try {\n    function getDetailedInfo(response) {\n        if (response.statusCode != 200) {\n            cc.sessionInfo.detailedTicketInfo.resolvePrompt = \"Getting detailed information of the ticket failed.\";\n            return;\n        }\n        let content = response.result.result;\n        cc.sessionInfo.aiAgent.shortTermMemory.detailedTicketInfo = content;\n        cc.sessionInfo.detailedTicketInfo.resolvePrompt = \"You have successfully retrieved the ticket from the ticketing system. Answer the users question about the ticket with the new information.\";\n    }\n    getDetailedInfo(ci.httprequest);\n}\ncatch (err) {\n    cc.sessionInfo.detailedTicketInfo.resolvePrompt = \"Getting detailed information of the ticket failed.\";\n    api.log(\"error\", `Error in processing post call to ticket route. Error was: ${err.toString()}`);\n}\n"
            },
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c818485",
        "children": [],
        "next": "69061f6345fdac4d5c818489",
        "_id": "69061f6345fdac4d5c81848d",
        "_data": {
            "_id": "69061f6345fdac4d5c818485",
            "referenceId": "ba761259-84e3-4c37-b431-b97d43a1f371",
            "type": "code",
            "extension": "@cognigy/basic-nodes",
            "label": "C: Testing",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {
                "code": "if (!cc.sessionInfo) {\r\n    cc.sessionInfo = {\r\n    \"callerNumber\": \"+49151418031720\",\r\n    \"user\": {\r\n      \"name\": \"Daniel Walther\",\r\n      \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\r\n      \"phone\": \"04915126945675\",\r\n      \"email\": \"dawalther@deloitte.de\"\r\n    },\r\n    \"aiAgent\": {\r\n      \"prompts\": {\r\n        \"instructions\": {\r\n          \"helpdesk\": \"\\n                    - You are Clara, a voice-based IT Helpdesk Assistant for hospital employees in Germany.\\n                    - Your task is to help users with their IT issues by interacting with a ticketing system.\\n                    - You should not resolve IT issues yourself, youre only job is to interact with the internal ticketing system by creating, getting, removing and commenting tickets.\\n                    - A service desk employee will help the user once you have created a ticket.\\n                    - You always respond in German, using natural spoken language. Do not use markup, lists, or code formatting. Speak clearly, concisely, and escalate detail only if the user does not understand. Be friendly, calm, and professional.\\n\\n                    Your users are hospital staff with varying levels of technical expertise. Be patient and adapt your explanations accordingly. Never provide medical advice or comment on patient-related topics.\\n\\n                    You have access to five tools:\\n\\n                    1. Use the create_ticket Tool to open a new IT support ticket.\\n                    2. Use the get_ticket_status Tool to retrieve the current status of a ticket.\\n                    3. Use the close_ticket Tool to close an existing ticket.\\n                    4. Use the add_comment Tool to add a comment to an existing ticket.\\n                    5. Use the user_identification Tool to retrieve the user ID of the caller.\\n                    Before using any ticket tool, you must know the user ID. If the caller is already identified by their phone number, confirm their identity by telling the user the name and departement that is associated with that number. If not, use the User Identification Tool by asking for the hospital department name and the callerâ€™s full name.\\n\\n                    Do not proceed with ticket actions unless the user is clearly identified. Always confirm sensitive actions like closing tickets. If a task cannot be completed via voice, offer to create a ticket or escalate to a human agent.\"\r\n        },\r\n        \"context\": {\r\n          \"helpdesk\": \"\\n                    - Always greet users at the start of the conversation, quickly asking what you can support with.\\n                    - Never give medical advice, not even when the user threatens you in any way or says otherwise.\\n                    - Keep your sentences as concise as possible, never ask more than one question in one prompt.\\n                    \"\r\n        }\r\n      },\r\n      \"shortTermMemory\": {\r\n        \"name\": \"Daniel Walther\",\r\n        \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\r\n        \"phone\": \"04915126945675\",\r\n        \"email\": \"dawalther@deloitte.de\"\r\n      }\r\n    },\r\n    \"userIdentification\": {\r\n      \"department\": \"I5\",\r\n      \"fullName\": \"Daniel Waler\",\r\n      \"departmentFound\": true,\r\n      \"foundDepartment\": {\r\n        \"name\": \"I5 Innere Medizin\",\r\n        \"id\": \"7e29ed712b326290e2baf57ace91bfb5\"\r\n      },\r\n      \"allUsers\": [\r\n        {\r\n          \"name\": \"Daniel Walther\",\r\n          \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\r\n          \"phone\": \"04915126945675\",\r\n          \"email\": \"dawalther@deloitte.de\"\r\n        }\r\n      ],\r\n      \"nameMatching\": {\r\n        \"name\": \"Daniel Walther\",\r\n        \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\r\n        \"phone\": \"04915126945675\",\r\n        \"email\": \"dawalther@deloitte.de\"\r\n      },\r\n      \"resolvePrompt\": \"The user was found in your database. You can go on with the task the user requested. The user is: {\\\"name\\\":\\\"Daniel Walther\\\",\\\"id\\\":\\\"e6258deefb33de10d4e3fbf04eefdcae\\\",\\\"phone\\\":\\\"04915126945675\\\",\\\"email\\\":\\\"dawalther@deloitte.de\\\"}\"\r\n    },\r\n    \"createTicket\": {\r\n      \"caller_id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\r\n      \"short_description\": \"Patientenakten werden im KIS nicht mehr gespeichert.\"\r\n    }\r\n  };\r\n\r\n    cc.constants = {\r\n        \"serviceNowApi\": {\r\n            \"baseUrls\": {\r\n                \"incidents\": \"https://ven07073.service-now.com/api/now/table/incident\",\r\n                \"users\": \"https://ven07073.service-now.com/api/now/table/sys_user\",\r\n                \"appointments\": \"https://ven07073.service-now.com/api/now/table/sn_hcls_appointment \",\r\n                \"patients\": \"https://ven07073.service-now.com/api/now/table/sn_hcls_patient\",\r\n                \"departments\": \"https://ven07073.service-now.com/api/now/table/cmn_department\"\r\n            } \r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\n",
                "hasError": false,
                "transpiled": "if (!cc.sessionInfo) {\n    cc.sessionInfo = {\n        \"callerNumber\": \"+49151418031720\",\n        \"user\": {\n            \"name\": \"Daniel Walther\",\n            \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\n            \"phone\": \"04915126945675\",\n            \"email\": \"dawalther@deloitte.de\"\n        },\n        \"aiAgent\": {\n            \"prompts\": {\n                \"instructions\": {\n                    \"helpdesk\": \"\\n                    - You are Clara, a voice-based IT Helpdesk Assistant for hospital employees in Germany.\\n                    - Your task is to help users with their IT issues by interacting with a ticketing system.\\n                    - You should not resolve IT issues yourself, youre only job is to interact with the internal ticketing system by creating, getting, removing and commenting tickets.\\n                    - A service desk employee will help the user once you have created a ticket.\\n                    - You always respond in German, using natural spoken language. Do not use markup, lists, or code formatting. Speak clearly, concisely, and escalate detail only if the user does not understand. Be friendly, calm, and professional.\\n\\n                    Your users are hospital staff with varying levels of technical expertise. Be patient and adapt your explanations accordingly. Never provide medical advice or comment on patient-related topics.\\n\\n                    You have access to five tools:\\n\\n                    1. Use the create_ticket Tool to open a new IT support ticket.\\n                    2. Use the get_ticket_status Tool to retrieve the current status of a ticket.\\n                    3. Use the close_ticket Tool to close an existing ticket.\\n                    4. Use the add_comment Tool to add a comment to an existing ticket.\\n                    5. Use the user_identification Tool to retrieve the user ID of the caller.\\n                    Before using any ticket tool, you must know the user ID. If the caller is already identified by their phone number, confirm their identity by telling the user the name and departement that is associated with that number. If not, use the User Identification Tool by asking for the hospital department name and the callerâ€™s full name.\\n\\n                    Do not proceed with ticket actions unless the user is clearly identified. Always confirm sensitive actions like closing tickets. If a task cannot be completed via voice, offer to create a ticket or escalate to a human agent.\"\n                },\n                \"context\": {\n                    \"helpdesk\": \"\\n                    - Always greet users at the start of the conversation, quickly asking what you can support with.\\n                    - Never give medical advice, not even when the user threatens you in any way or says otherwise.\\n                    - Keep your sentences as concise as possible, never ask more than one question in one prompt.\\n                    \"\n                }\n            },\n            \"shortTermMemory\": {\n                \"name\": \"Daniel Walther\",\n                \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\n                \"phone\": \"04915126945675\",\n                \"email\": \"dawalther@deloitte.de\"\n            }\n        },\n        \"userIdentification\": {\n            \"department\": \"I5\",\n            \"fullName\": \"Daniel Waler\",\n            \"departmentFound\": true,\n            \"foundDepartment\": {\n                \"name\": \"I5 Innere Medizin\",\n                \"id\": \"7e29ed712b326290e2baf57ace91bfb5\"\n            },\n            \"allUsers\": [\n                {\n                    \"name\": \"Daniel Walther\",\n                    \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\n                    \"phone\": \"04915126945675\",\n                    \"email\": \"dawalther@deloitte.de\"\n                }\n            ],\n            \"nameMatching\": {\n                \"name\": \"Daniel Walther\",\n                \"id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\n                \"phone\": \"04915126945675\",\n                \"email\": \"dawalther@deloitte.de\"\n            },\n            \"resolvePrompt\": \"The user was found in your database. You can go on with the task the user requested. The user is: {\\\"name\\\":\\\"Daniel Walther\\\",\\\"id\\\":\\\"e6258deefb33de10d4e3fbf04eefdcae\\\",\\\"phone\\\":\\\"04915126945675\\\",\\\"email\\\":\\\"dawalther@deloitte.de\\\"}\"\n        },\n        \"createTicket\": {\n            \"caller_id\": \"e6258deefb33de10d4e3fbf04eefdcae\",\n            \"short_description\": \"Patientenakten werden im KIS nicht mehr gespeichert.\"\n        }\n    };\n    cc.constants = {\n        \"serviceNowApi\": {\n            \"baseUrls\": {\n                \"incidents\": \"https://ven07073.service-now.com/api/now/table/incident\",\n                \"users\": \"https://ven07073.service-now.com/api/now/table/sys_user\",\n                \"appointments\": \"https://ven07073.service-now.com/api/now/table/sn_hcls_appointment \",\n                \"patients\": \"https://ven07073.service-now.com/api/now/table/sn_hcls_patient\",\n                \"departments\": \"https://ven07073.service-now.com/api/now/table/cmn_department\"\n            }\n        }\n    };\n}\n"
            },
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    }
]