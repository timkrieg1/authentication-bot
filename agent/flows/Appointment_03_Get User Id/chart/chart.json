[
    {
        "node": "69061f6345fdac4d5c8183e4",
        "children": [],
        "next": "69061f6345fdac4d5c8183e5",
        "_id": "69061f6345fdac4d5c8183e6",
        "_data": {
            "_id": "69061f6345fdac4d5c8183e4",
            "referenceId": "0b083e7a-2f05-4f94-ad27-04d3932411c5",
            "type": "start",
            "extension": "@cognigy/basic-nodes",
            "label": "Start",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": true,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183e7",
        "children": [],
        "next": null,
        "_id": "69061f6345fdac4d5c8183e8",
        "_data": {
            "_id": "69061f6345fdac4d5c8183e7",
            "referenceId": "16155712-7e7a-4262-8608-9956af75b70e",
            "type": "end",
            "extension": "@cognigy/basic-nodes",
            "label": "End",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183e5",
        "children": [
            "69061f6345fdac4d5c8183e9",
            "69061f6345fdac4d5c8183ea"
        ],
        "next": "69061f6345fdac4d5c8183eb",
        "_id": "69061f6345fdac4d5c8183ec",
        "_data": {
            "_id": "69061f6345fdac4d5c8183e5",
            "referenceId": "41448e94-0003-44ff-9457-f4e94f572059",
            "type": "once",
            "extension": "@cognigy/basic-nodes",
            "label": "Once",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183e9",
        "children": [],
        "next": "69061f6345fdac4d5c8183ed",
        "_id": "69061f6345fdac4d5c8183ee",
        "_data": {
            "_id": "69061f6345fdac4d5c8183e9",
            "referenceId": "ecbdfe21-85f5-496b-b2cc-b82aec3212f8",
            "type": "onFirstExecution",
            "extension": "@cognigy/basic-nodes",
            "label": "On First Time",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183ed",
        "children": [],
        "next": null,
        "_id": "69061f6345fdac4d5c8183ef",
        "_data": {
            "_id": "69061f6345fdac4d5c8183ed",
            "referenceId": "28ad0947-227f-40aa-8326-cd17d1cf20d0",
            "type": "httpRequest",
            "extension": "@cognigy/basic-nodes",
            "label": "HTTP: Retrieve Appointments by Phone",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {
                "type": "GET",
                "url": "{{cc.constants.serviceNowApi.baseUrls.patients}}?sysparm_query=work_phone={{cc.sessionInfo.callerNumber}}",
                "headers": "{\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n}",
                "payloadType": "json",
                "payloadText": "",
                "payloadJSON": "\"{{cc.sessionInfo.createTicket}}\"",
                "payloadFormData": "{}",
                "storeLocation": "input",
                "inputKey": "httprequest",
                "contextKey": "asyncRequest",
                "authType": "basic",
                "basicConnection": "b2582db9-2bd7-4a35-94a3-fbbade0a581d",
                "apiKeyAuthKeyConnection": "",
                "apiKeyXKeyConnection": "",
                "oAuth2Connection": "",
                "async": false,
                "cache": false,
                "cacheExpiry": 0,
                "timeout": 8000,
                "retryAttempts": 0,
                "storeResponseHeaders": false,
                "allowSelfSigned": false,
                "errorLogging": "none",
                "debugLogging": "none",
                "abortOnError": false,
                "logWarning": ""
            },
            "preview": "{{cc.constants.serviceNowApi.baseUrls.patients}}?sysparm_query=work_phone={{cc.sessionInfo.callerNumber}}",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183ea",
        "children": [],
        "next": "69061f6345fdac4d5c8183f0",
        "_id": "69061f6345fdac4d5c8183f1",
        "_data": {
            "_id": "69061f6345fdac4d5c8183ea",
            "referenceId": "f695df37-5733-46c1-af36-f2c8758a7fe3",
            "type": "afterwards",
            "extension": "@cognigy/basic-nodes",
            "label": "Afterwards",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {},
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183f0",
        "children": [],
        "next": null,
        "_id": "69061f6345fdac4d5c8183f2",
        "_data": {
            "_id": "69061f6345fdac4d5c8183f0",
            "referenceId": "093ef2b7-89db-44ec-b76d-96fdcecb246e",
            "type": "httpRequest",
            "extension": "@cognigy/basic-nodes",
            "label": "HTTP: Retrieve Appointments by Phone (3)",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {
                "type": "GET",
                "url": "{{cc.constants.serviceNowApi.baseUrls.patients}}?sysparm_query=name={{ci.aiAgent.toolArgs.name}}",
                "headers": "{\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n}",
                "payloadType": "json",
                "payloadText": "",
                "payloadJSON": "\"{{cc.sessionInfo.createTicket}}\"",
                "payloadFormData": "{}",
                "storeLocation": "input",
                "inputKey": "httprequest",
                "contextKey": "asyncRequest",
                "authType": "basic",
                "basicConnection": "b2582db9-2bd7-4a35-94a3-fbbade0a581d",
                "apiKeyAuthKeyConnection": "",
                "apiKeyXKeyConnection": "",
                "oAuth2Connection": "",
                "async": false,
                "cache": false,
                "cacheExpiry": 0,
                "timeout": 8000,
                "retryAttempts": 0,
                "storeResponseHeaders": false,
                "allowSelfSigned": false,
                "errorLogging": "none",
                "debugLogging": "none",
                "abortOnError": false,
                "logWarning": ""
            },
            "preview": "{{cc.constants.serviceNowApi.baseUrls.patients}}?sysparm_query=name={{ci.aiAgent.toolArgs.name}}",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    },
    {
        "node": "69061f6345fdac4d5c8183eb",
        "children": [],
        "next": "69061f6345fdac4d5c8183e7",
        "_id": "69061f6345fdac4d5c8183f3",
        "_data": {
            "_id": "69061f6345fdac4d5c8183eb",
            "referenceId": "550dcb9f-96b9-47cd-95cc-80080c37f0f0",
            "type": "code",
            "extension": "@cognigy/basic-nodes",
            "label": "C: Process response",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isEntryPoint": false,
            "isDisabled": false,
            "config": {
                "code": "try {\r\n\r\n    function processPatientResponse(respone) {\r\n        let memory = \"\";\r\n        let rtaText = \"\";\r\n\r\n        if (respone.statusCode != 200) {\r\n            cc.sessionInfo.patient.failed = true;\r\n            rtaText = \"Getting the patient failed. Try again once more.\"\r\n            return\r\n        }\r\n\r\n        let content = respone.result.result;\r\n        if (content.length == 1) {\r\n            cc.sessionInfo.patient = {\r\n                ...cc.sessionInfo.patient,\r\n                \"sysId\": content[0].sys_id,\r\n                \"name\": content[0].name\r\n            };\r\n            \r\n        } else if (content.length > 1) {\r\n            rtaText = \"You have found more than one user with that name. Disambiguate with the caller which patient he is.\"\r\n        } else {\r\n            rtaText = \"You have found no patient with that name in the database. Ask the caller for his name again.\"\r\n        }\r\n\r\n        cc.sessionInfo.appointments.rtaText = rtaText;\r\n    }\r\n\r\n    processPatientResponse(ci.httprequest);\r\n\r\n    \r\n} catch(err) {\r\n    api.log(\"error\", `Error in cleaning get all incidents response. Error was: ${err.toString()}`)\r\n}",
                "hasError": false,
                "transpiled": "try {\n    function processPatientResponse(respone) {\n        let memory = \"\";\n        let rtaText = \"\";\n        if (respone.statusCode != 200) {\n            cc.sessionInfo.patient.failed = true;\n            rtaText = \"Getting the patient failed. Try again once more.\";\n            return;\n        }\n        let content = respone.result.result;\n        if (content.length == 1) {\n            cc.sessionInfo.patient = Object.assign(Object.assign({}, cc.sessionInfo.patient), { \"sysId\": content[0].sys_id, \"name\": content[0].name });\n        }\n        else if (content.length > 1) {\n            rtaText = \"You have found more than one user with that name. Disambiguate with the caller which patient he is.\";\n        }\n        else {\n            rtaText = \"You have found no patient with that name in the database. Ask the caller for his name again.\";\n        }\n        cc.sessionInfo.appointments.rtaText = rtaText;\n    }\n    processPatientResponse(ci.httprequest);\n}\ncatch (err) {\n    api.log(\"error\", `Error in cleaning get all incidents response. Error was: ${err.toString()}`);\n}\n"
            },
            "preview": "",
            "localeReference": "6873f7f242ec168c188334ee"
        }
    }
]